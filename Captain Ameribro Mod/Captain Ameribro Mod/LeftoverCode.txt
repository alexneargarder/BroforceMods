//Dictionary<HeroType, HeroController.HeroDefinition> heroDefinition = Traverse.Create(HeroController.Instance).Field("_heroData").GetValue() as Dictionary<HeroType, HeroController.HeroDefinition>;
            //HeroType CaptainAmeribro = (HeroType)45;

            //TFBGames.Management.Asset.AssetBundleReference<CaptainAmeribro> = 
            //TFBGames.Management.Asset.AssetBundleReference<CaptainAmeribro> assetLoader = 

            //BundleReferences.TestVanDammeAnimReference ameribroRef = new TFBGames.Management.Asset.AssetBundleReference<CaptainAmeribro>();



            //heroDefinition.Add(CaptainAmeribro, heroDefinition("Captain Ameribro", ))



            //String assetPath = Traverse.Create(bromax.characterReference).Field("assetPath").GetValue() as String;
            //Main.Log("loading " + assetPath);


            /*foreach (KeyValuePair<HeroType, HeroController.HeroDefinition> entry in heroDefinition)
            {
                Main.Log("HeroType: " + entry.Key);
                Main.Log("name: " + entry.Value.name);
                Main.Log("characterReference: " + entry.Value.characterReference);
                Main.Log("avatar: " + entry.Value.avatar);
                Main.Log("\n\n\n");
            }*/



            /*HeroType CaptainAmeribro = (HeroType)45;

            BundleReferences.TestVanDammeAnimReference ameribroRef = new BundleReferences.TestVanDammeAnimReference();

            CaptainAmeribro bro = new CaptainAmeribro();

            Traverse.Create(ameribroRef).Field("objectReference").SetValue(bro);

            Dictionary<HeroType, HeroController.HeroDefinition> heroDefinition = Traverse.Create(HeroController.Instance).Field("_heroData").GetValue() as Dictionary<HeroType, HeroController.HeroDefinition>;

            HeroController.HeroDefinition bromax = heroDefinition[HeroType.BroMax];

            heroDefinition.Add(CaptainAmeribro, new HeroController.HeroDefinition("Captain Ameribro", ameribroRef, bromax.avatar));

            nextHeroType = CaptainAmeribro;*/






			/*[HarmonyPatch(typeof(Rambro), "FireWeapon")]
    static class Rambro_FireWeapon_Patch
    {
        static void Prefix(Rambro __instance)
        {
            SpriteSM sprite = Traverse.Create(__instance).Field("sprite").GetValue() as SpriteSM;

            Main.Log("sprite name from rambro: " + sprite.name);
        }
    }*/




	// Token: 0x06002774 RID: 10100 RVA: 0x00131038 File Offset: 0x0012F438
    /* protected override void FireWeapon(float x, float y, float xSpeed, float ySpeed)
     {
         this.gunFrame = 5;
         this.SetGunSprite(this.gunFrame, 1);
         FullScreenFlashEffect.FlashHot(0.5f, new Vector3(x, y, 0f));
         EffectsController.CreateSparkParticles(x + 1f, y + 1f, 43, 5f, 100f, xSpeed, 0f, 0.5f, 0.3f);
         EffectsController.CreateSparkParticles(x + 1f, y + 1f, 56, 5f, 150f, xSpeed * 0.8f, 50f, 0.5f, 0.3f);
         EffectsController.CreateSparkParticles(x + 1f, y + 1f, 66, 5f, 200f, xSpeed * 0.6f, 40f, 0.5f, 0.3f);
         EffectsController.CreateMuzzleFlashMediumEffect(x + 1f, y + 1f, -25f, xSpeed * 0.2f, ySpeed * 0.2f, base.transform);
         Map.HitUnits(this, this, base.playerNum, 1, DamageType.Fire, 18f, 12f, x + 13f * base.transform.localScale.x, y, xSpeed * 2f, ySpeed, false, false, false, true);
         Map.HitUnits(this, this, base.playerNum, 3, DamageType.Explosion, 11f, 12f, x + 5f * base.transform.localScale.x, y, xSpeed * 2f, ySpeed + 90f, true, true, false, true);
         MapController.DamageGround(this, 15, DamageType.Explosion, 4f, x + base.transform.localScale.x * 4f, y, null, false);
         MapController.DamageGround(this, 10, DamageType.Explosion, 4f, x + base.transform.localScale.x * 10f, y, null, false);
         MapController.DamageGround(this, 7, DamageType.Explosion, 4f, x + base.transform.localScale.x * 16f, y, null, false);
         MapController.DamageGround(this, 5, DamageType.Explosion, 4f, x + base.transform.localScale.x * 22f, y, null, false);
         Map.HitProjectiles(base.playerNum, 500, DamageType.Fire, 10f, x + base.transform.localScale.x * 7f, y + 10f, base.transform.localScale.x * 150f, 50f, 0f);
         Map.HitProjectiles(base.playerNum, 500, DamageType.Fire, 10f, x + base.transform.localScale.x * 21f, y + 10f, base.transform.localScale.x * 150f, 50f, 0f);
         this.SetGunSprite(this.gunFrame, 0);
         this.gunCounter = 0f;
         Projectile projectile = ProjectileController.SpawnProjectileLocally(this.flameProjectiles[UnityEngine.Random.Range(0, this.flameProjectiles.Length)], this, x, y, 0.66f * xSpeed * 0.9f, ySpeed + 2f + UnityEngine.Random.value * 15f, base.playerNum);
         projectile.SetDamage(3);
         projectile = ProjectileController.SpawnProjectileLocally(this.flameProjectiles[UnityEngine.Random.Range(0, this.flameProjectiles.Length)], this, x, y, 0.66f * xSpeed * 0.9f, ySpeed - 2f - UnityEngine.Random.value * 15f, base.playerNum);
         projectile.SetDamage(5);
         ProjectileController.SpawnProjectileLocally(this.flameProjectiles[UnityEngine.Random.Range(0, this.flameProjectiles.Length)], this, x, y, 0.66f * xSpeed * 0.85f, ySpeed - 40f - UnityEngine.Random.value * 35f, base.playerNum);
         projectile.SetDamage(5);
         projectile = ProjectileController.SpawnProjectileLocally(this.flameProjectiles[UnityEngine.Random.Range(0, this.flameProjectiles.Length)], this, x, y, 0.33f * xSpeed * 0.9f, ySpeed - UnityEngine.Random.value * 15f, base.playerNum);
         projectile.SetDamage(5);
         projectile = ProjectileController.SpawnProjectileLocally(this.projectile, this, x + base.transform.localScale.x * 6f, y, xSpeed * 1.2f, ySpeed - 2f - UnityEngine.Random.value * 15f, base.playerNum);
         projectile.SetDamage(5);
     }*/

	 // Token: 0x06002773 RID: 10099 RVA: 0x00130FA8 File Offset: 0x0012F3A8
    /*protected override void UseFire()
    {
        //Main.Log("firing");
        this.FireWeapon(base.X + base.transform.localScale.x * 10f, base.Y + 8f, base.transform.localScale.x * 300f, (float)UnityEngine.Random.Range(-20, 20));
        this.PlayAttackSound();
        Map.DisturbWildLife(base.X, base.Y, 96f, base.playerNum);
        this.fireDelay = 0.4f;
 
    }*/